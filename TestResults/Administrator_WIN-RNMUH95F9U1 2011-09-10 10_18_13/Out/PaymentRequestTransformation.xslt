<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2010

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns0="http://schema.org/Person" xmlns:ns1="http://schema.org/Place" xmlns:ns2="http://schema.org/StructuredValue" xmlns:ns3="http://schema.org/Thing" xmlns:xs="http://www.w3.org/2001/XMLSchema" exclude-result-prefixes="ns0 ns1 ns2 ns3 xs">
  <xsl:output method="xml" encoding="UTF-8" indent="yes"/>
  <xsl:template match="/">
    <xsl:variable name="var1_instance_PaymentRequest" select="."/>
    <PaymentRequestData>
      <xsl:attribute name="xsi:noNamespaceSchemaLocation" namespace="http://www.w3.org/2001/XMLSchema-instance">
        <xsl:value-of select="'C:/Users/Administrator/Documents/AF/XmlProjects/Common/schema/2011/Common/PaymentRequest/PaymentData.xsd'"/>
      </xsl:attribute>
      <xsl:for-each select="$var1_instance_PaymentRequest/PaymentRequest">
        <xsl:variable name="var2_PaymentRequest" select="."/>
        <CardData>
          <ExpirationMonth>
            <xsl:value-of select="number(string($var2_PaymentRequest/ElectronicPaymentCardData/ns3:ExpirationMonth))"/>
          </ExpirationMonth>
          <ExpirationYear>
            <xsl:value-of select="number(string($var2_PaymentRequest/ElectronicPaymentCardData/ns3:ExpirationYear))"/>
          </ExpirationYear>
          <CardNumber>
            <xsl:value-of select="number(string($var2_PaymentRequest/ElectronicPaymentCardData/ns3:CardNumber))"/>
          </CardNumber>
          <SecurityCode>
            <xsl:value-of select="number(string($var2_PaymentRequest/ElectronicPaymentCardData/ns3:CVV))"/>
          </SecurityCode>
          <CardHolderName>
            <xsl:value-of select="string($var2_PaymentRequest/ElectronicPaymentCardData/ns3:Cardholder)"/>
          </CardHolderName>
          <CardType>
            <xsl:value-of select="string($var2_PaymentRequest/ElectronicPaymentCardData/ns3:CardType)"/>
          </CardType>
        </CardData>
        <CustomerData>
          <AddressLine1>
            <xsl:value-of select="string($var2_PaymentRequest/Person/ns0:Address/ns0:PostalAddress/ns2:StreetAddress)"/>
          </AddressLine1>
          <City/>
          <Country>
            <xsl:value-of select="string($var2_PaymentRequest/Person/ns0:Address/ns0:PostalAddress/ns2:AddressCountry/ns1:Name)"/>
          </Country>
          <EmailAddress>
            <xsl:value-of select="string($var2_PaymentRequest/Person/ns0:Address/ns0:PostalAddress/ns2:Email)"/>
          </EmailAddress>
          <FirstName>
            <xsl:value-of select="string($var2_PaymentRequest/Person/ns0:FirstName)"/>
          </FirstName>
          <LastName>
            <xsl:value-of select="string($var2_PaymentRequest/Person/ns0:LastName)"/>
          </LastName>
          <PhoneNumber>
            <xsl:value-of select="string($var2_PaymentRequest/Person/ns0:Address/ns0:PostalAddress/ns2:Telephone)"/>
          </PhoneNumber>
          <PostalCode>
            <xsl:value-of select="number(string($var2_PaymentRequest/Person/ns0:Address/ns0:PostalAddress/ns2:PostalCode))"/>
          </PostalCode>
          <State>
            <xsl:value-of select="string($var2_PaymentRequest/Person/ns0:Address/ns0:PostalAddress/ns2:AddressLocality)"/>
          </State>
        </CustomerData>
      </xsl:for-each>
    </PaymentRequestData>
  </xsl:template>
</xsl:stylesheet>
